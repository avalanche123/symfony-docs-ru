Как создать собственные страницы ошибок
=======================================

Когда происходит какое-либо исключение в Symfony2, оно перехватывается внутри
класса ``Kernel`` и в конечном счете перенаправляется специальному контроллеру,
``TwigBundle:Exception:show`` для обработки. Данный контроллер, который
расположен в ядре пакета ``TwigBundle``, определяет какой из шаблонов
ошибок показать, и какой установить код ошибки данному исключению.

.. tip::

    Способов настройки перехвата исключений гораздо больше, чем описано здесь.
    Обработка внутреннего события ``kernel.exception``, которое возникает 
    при возникновении исключений позволяет полностью получить контроль над 
    обработкой исключений. Для получения дополнительной информации см.
    :ref:`kernel-kernel.exception`.

Все шаблоны ошибок размещены внутри пакета ``TwigBundle``. Для переопределения
шаблонов, следует использовать стандартный способ переопределения шаблонов, 
которые размещены внутри пакета. Для получения дополнительной информации см.
:ref:`overiding-bundle-templates`.

Например, чтобы переопределить шаблон по-умолчанию, который показывается 
конечному пользователю, создайте шаблон расположенный здесь:
``app/Resources/TwigBundle/views/Exception/error.html.twig``:

.. code-block:: html+jinja

    <!DOCTYPE html>
    <html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <title>An Error Occurred: {{ status_text }}</title>
    </head>
    <body>
        <h1>Oops! An Error Occurred</h1>
        <h2>The server returned a "{{ status_code }} {{ status_text }}".</h2>
    </body>
    </html>

.. tip::

    Если вы не знакомы с Twig'ом, не стоит переживать. Twig - простой,
    мощный и необязательный шаблонизатор, который интегрирован с ``Symfony2``.

В добавок к обычной HTML странице ошибок, Symfony предоставляет доступ
к страницам ошибок для самых распростренных форматов ответов, включая JSON 
(``error.json.twig``), XML, (``error.xml.twig``), и даже Javascript
(``error.js.twig``). И мы назвали всего несоколько из них. Для переопределения 
любого из этих шаблонов, просто создайте новый файл с тем же именем в каталоге 
``app/Resources/TwigBundle/views/Exception``.
Такой способ является стандартным, с помощью которого переопределяются любые 
шаблоны которые есть в пакете.

.. _cookbook-error-pages-by-status-code:

Настройка 404 страницы и других страниц ошибок
----------------------------------------------

Также вы можете настроить отдельные шаблоны ошибок в зависимости от кода 
состояния HTTP. Например, создайте шаблон 
``app/Resources/TwigBundle/views/Exception/error404.html.twig`` для отображения
специальной страницы для 404 ошибки (страница не найдена).

Для определения, какой шаблон использовать, Symfony использует следующий 
алгоритм:

* Сперва, он ищет шаблон для текущего формата и кода состояния (например 
  ``error404.json.twig``);

* Если такого шаблона не существует, тогда он ищет шаблон для текущего формата
  (например ``error.json.twig``);

* Если такого шаблона не существует, тогда он возвращается к HTML шаблону
  (например ``error.html.twig``).

.. tip::
    Полный список стандартных шаблонов ошибок находится  в каталоге
    ``Resources/views/Exception``, пакета ``TwigBundle``. В стандартной поставке
    Symfony2, пакет ``TwigBundle`` находится в  каталоге
    ``vendor/symfony/src/Symfony/Bundle/TwigBundle``. Чаще всего, самым простым 
    способом настройки страницы ошибок, является её копирование из пакета 
    ``TwigBundle`` в каталог ``app/Resources/TwigBundle/views/Exception`` и
    последующее редактирование.

.. note::

    Страницы-исключения, которые удобны для отладки и которые демонстрируются 
    разработчику также могут быть настроены данным способом - создайте шаблоны 
    ``exception.html.twig`` для стандартной HTML страницы ошибок или
    соотвественно ``exception.json.twig`` для JSON.
