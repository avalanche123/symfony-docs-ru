.. index::
   single: Контроллер; В качестве сервиса

Как определять Контроллеры в качестве сервисов
==============================================

Из руководства, вы узнали, что работать с контроллером легче,
если он расширяет базовый класс :class:`Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller`.
Данный способ хорошо работает, однако контроллер можно определить в виде службы.

Чтобы сослаться на контроллер который определен в виде службы, следует использовать
нотацию (обозначение) с одним знаком двоеточия (:). Например, мы определили сервис 
с именем ``my_controller`` и хотим вызвать метод ``indexAction()`` внутри него::

    $this->forward('my_controller:indexAction', array('foo' => $bar));

Также необходимо использовать такую же запись для значений маршрута ``_controller``

.. code-block:: yaml

    my_controller:
        pattern:   /
        defaults:  { _controller: my_controller:indexAction }

При таком способе использования контроллера, он должен быть определен
в настройках контейнера сервисов.
Для получения дополнительной информации см. главу :doc:`Service Container
</book/service_container>`

Контроллеры определенные как сервисы, скорее всего не будут
наследниками базового класса ``Controller``. Вместо того, чтобы использовать 
методы которые он предоставляет, скорее всего вы будете работать непосредственно 
со службами которые необходимы именно вам. К счастью, решения многих 
распространенных задач не сопровождается большими сложностями и базовый класс 
``Controller`` является хорошим источником знаний, 

.. note::

    Определение контроллера в виде службы требует немного больше усилий, чем 
    просто контроллера. Основным преимуществом сервиса является то, что весь 
    контроллер или любая служба которая передается контроллеру, может быть 
    изменена через настройку контейнера сервисов. При разработке пакетов 
    с открытым исходным кодом или пакета, который будет использован во множестве 
    разных проектов, данное преимущество представляется особенно применимым. 
    Даже если вы не будете использовать контроллеры в качестве служб, их 
    применение можно будет обнаружить в пакетах Symfony2 с открытым исходным кодом.   
