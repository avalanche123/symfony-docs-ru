.. index::
   single: Тесты; Профилирование

Как использовать профилировщик в Функциональном тесте
=====================================================

Настоятельно рекомендуется чтобы функциональный тест проверял только Response.
Но если пишутся функциональные тесты, следящие за production серверами,
то возможно у вас появится желание написать тесты, использующие данные 
профилировщика, т. к. они позволяют проверить множество параметров и обеспечить
соблюдение определенных показателей.

:doc:`Профилировщик </book/internals/profiler>` в Symfony2 собирает множество
данных по каждому запросу. Используйте их для замера количества запросов к БД,
времени затраченного фреймворком и т. д. Но, прежде чем писать проверочные
выражения, всегда следует проверять доступность профилировщика  (по-умолчанию
к нему есть доступ в ``test`` окружении)::

    class HelloControllerTest extends WebTestCase
    {
        public function testIndex()
        {
            $client = static::createClient();
            $crawler = $client->request('GET', '/hello/Fabien');

            // Напишите выражения, относящиеся к Response
            // ...

            // Проверяет, доступен ли профилировщик
            if ($profile = $client->getProfile()) {
                // проверяет количество запросов
                $this->assertTrue($profile->get('db')->getQueryCount() < 10);

                // проверяет время, затраченное фреймворком
                $this->assertTrue( $profile->get('timer')->getTime() < 0.5);
            }
        }
    }

Если тест провалится, основываясь на данных профилировщика (например, слишком
много запросов к БД), то можно воспользоваться Веб Профилировщиком для анализа
запросов после завершения тестов. Это легко сделать если встроить метку в
сообщение об ошибке::

    $this->assertTrue(
        $profile->get('db')->getQueryCount() < 30,
        sprintf('Checks that query count is less than 30 (token %s)', $profile->getToken())
    );

.. caution::

     Хранилище профилировщика может различаться в зависимости от окружения
     (особенно если используется хранилище SQLite, являющееся одним из
     сконфигурированных по-умолчанию).

.. note::

    В тестах информация профилировщика доступна даже в тех случаях, когда клиент
    изолирован либо используется HTTP слой.

.. tip::

    Прочитайте про API встроенных :doc:`сборщиков данных </cookbook/profiler/data_collector>`
    чтобы узнать больше об их интерфейсах.
